Resources:

  ApiCert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: api.${self:custom.domain}
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: api.${self:custom.domain}
          ValidationDomain: ${self:custom.domain}

  ApiDNS:
    Type: "AWS::Route53::HostedZone"
    Properties:
      HostedZoneConfig:
        Comment: "Api hosted zone"
      Name: api.${self:custom.values.host}

  ApiDNSRecord:
    Type: AWS::Route53::RecordSetGroup
    DependsOn:
      - ApiDNS
    Properties:
      HostedZoneName: api.${self:custom.values.host}.
      RecordSets:
        - Name: api.${self:custom.values.host}
          Type: A
          AliasTarget:
            HostedZoneId:
              Fn::GetAtt:
                - LoadBalancer
                - CanonicalHostedZoneID
            DNSName:
              Fn::GetAtt:
                - LoadBalancer
                - DNSName

  SiteCert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: ${self:custom.domain}
      ValidationMethod: DNS
      DomainValidationOptions:
        - DomainName: ${self:custom.domain}
          ValidationDomain: ${self:custom.domain}

  SiteDNS:
    Type: "AWS::Route53::HostedZone"
    Properties:
      HostedZoneConfig:
        Comment: "Site hosted zone"
      Name: ${self:custom.domain}

  SiteDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - SiteCert
      - WebSiteBucket
    Properties:
      DistributionConfig:
        Aliases:
          - ${self:custom.domain}
        DefaultRootObject: index.html
        ViewerCertificate:
          AcmCertificateArn:
            Ref: SiteCert
          SslSupportMethod: sni-only
        Origins:
          - DomainName: ${self:custom.domain}.s3.amazonaws.com
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: ''
        Enabled: true
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: '/index.html'
            ErrorCachingMinTTL: 300
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          Compress: true
          AllowedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        HttpVersion: http2
        PriceClass: PriceClass_All
      Tags:
        - Key: Context
          Value: ${self:custom.values.prefix}

  SiteDNSRecord:
    Type: AWS::Route53::RecordSetGroup
    DependsOn:
      - SiteDNS
#      - SiteDistribution
    Properties:
      HostedZoneName: ${self:custom.domain}.
      RecordSets:
        - Name: ${self:custom.domain}
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName:
              Fn::GetAtt:
                - SiteDistribution
                - DomainName
        - Name: api.${self:custom.domain}
          Type: NS
          ResourceRecords:
            Fn::GetAtt:
              - ApiDNS
              - NameServers
          TTL: '900'

