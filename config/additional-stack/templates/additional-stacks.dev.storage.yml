Resources:

  WebSiteBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Delete
    Properties:
      BucketName: ${self:custom.values.host}
      AccessControl: PublicRead
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET]
            AllowedOrigins: ['*']
            ExposedHeaders: [Date]
            Id: myCORSRuleId1
            MaxAge: '3600'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      Tags:
        - Key: Context
          Value: ${self:custom.values.prefix}

  SiteBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Delete
    Properties:
      BucketName: assets.${self:custom.values.host}
      AccessControl: PublicRead
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET]
            AllowedOrigins: ['*']
            ExposedHeaders: [Date]
            Id: myCORSRuleId1
            MaxAge: '3600'
      Tags:
        - Key: Context
          Value: ${self:custom.values.prefix}

  PGDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 5
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 7
      DBInstanceClass: "db.t2.micro"
      DBInstanceIdentifier: ${self:custom.values.prefix}-pgdb-instance
      DBName: ${self:custom.db.name}
      Engine: ${self:custom.db.engine}
      EngineVersion: ${self:custom.db.engineVersion}
      EnablePerformanceInsights: true
      DeleteAutomatedBackups: false
      MasterUsername: ${self:custom.db.username}
      MasterUserPassword: ${self:custom.db.password}
      Tags:
        - Key: Context
          Value: ${self:custom.values.prefix}
      PreferredMaintenanceWindow: Mon:09:00-Mon:10:00
      PreferredBackupWindow: 00:00-01:00
      PubliclyAccessible: true
      Port: ${self:custom.db.port}
      VPCSecurityGroups:
        - Fn::GetAtt: [ PGDBSecurityGroup, GroupId ]
      DBSubnetGroupName:
        Ref: PGDBSubnetGroup
    DeletionPolicy: "Snapshot"
Outputs:

  WebsiteURL:
    Value:
      Fn::GetAtt:
        - SiteBucket
        - WebsiteURL
    Description: URL for website hosted on S3

  S3BucketSecureURL:
    Value:
      Fn::Join:
        - ''
        - - 'https://'
          - Fn::GetAtt:
            - SiteBucket
            - DomainName
    Description: Name of S3 bucket to hold website content
