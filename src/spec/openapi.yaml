openapi: 3.0.0
info:
  title: Bike Rental API
  version: 1.0.0
  description: API для системы аренды велосипедов

servers:
  - url: http://localhost:8080

paths:
  /v1/profile:
    get:
      tags:
        - Профиль
      summary: Получить профиль пользователя
      responses:
        200:
          description: Успешно - данные профиля пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                   data:
                    $ref: '#/components/schemas/User'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/InternalServerError'
  /v1/bikes:
    get:
      tags:
        - Велосипеды
      summary: Список доступных велосипедов
      parameters:
        - $ref: '#/components/parameters/UpperLeftLatQuery'
        - $ref: '#/components/parameters/UpperLeftLngQuery'
        - $ref: '#/components/parameters/LowerRightLatQuery'
        - $ref: '#/components/parameters/LowerRightLngQuery'
      responses:
        200:
          description: "Success - requested bikes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/MetaDataPaging'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Bike'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Forbidden'
        403:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/InternalServerError'
  /v1/bikes/{id}:
    get:
      tags:
        - Велосипеды
      summary: Получить информацию о велосипеде по ID
      parameters:
        - $ref: '#/components/parameters/BikeId'
      responses:
        200:
          description: "Success - requested bikes"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Bike'

        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /v1/bike-types:
    get:
      tags:
        - Bike Types
      summary: Получить список типов велосипедов
      responses:
        200:
          description: Успешно - список типов велосипедов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BikeType'  # You will need to define this schema
        500:
          $ref: '#/components/responses/InternalServerError'

  /v1/bike-types/{id}:
    get:
      tags:
        - Bike Types
      summary: Получить тип велосипеда по ID
      parameters:
        - $ref: '#/components/parameters/BikeTypeId'  # You will need to define this parameter
      responses:
        200:
          description: Успешно - тип велосипеда
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BikeType'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Bike Types
      summary: Обновить тип велосипеда по ID
      parameters:
        - $ref: '#/components/parameters/BikeTypeId'
      responses:
        200:
          description: Успешно - тип велосипеда обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BikeType'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Bike Types
      summary: Удалить тип велосипеда по ID
      parameters:
        - $ref: '#/components/parameters/BikeTypeId'
      responses:
        204:
          description: Успешно - тип велосипеда удален
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
  /v1/device-states-history:
    get:
      tags:
        - Device States History
      summary: Получить историю состояний устройства
      responses:
        200:
          description: Успешно - история состояний устройства
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceStateHistory'  # You will need to define this schema
        500:
          $ref: '#/components/responses/InternalServerError'

  /v1/device-states-history/{id}:
    get:
      tags:
        - Device States History
      summary: Получить состояние устройства по ID
      parameters:
        - $ref: '#/components/parameters/DeviceStateHistoryId'  # You will need to define this parameter
      responses:
        200:
          description: Успешно - состояние устройства
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStateHistory'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Device States History
      summary: Обновить состояние устройства по ID
      parameters:
        - $ref: '#/components/parameters/DeviceStateHistoryId'
      responses:
        200:
          description: Успешно - состояние устройства обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStateHistory'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Device States History
      summary: Удалить состояние устройства по ID
      parameters:
        - $ref: '#/components/parameters/DeviceStateHistoryId'
      responses:
        204:
          description: Успешно - состояние устройства удалено
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
components:
  parameters:
    BikeId:
      name: id
      in: path
      description: ID велосипеда
      required: true
      schema:
        type: string
        format: uuid
    BikeTypeId:
      name: id
      in: path
      description: ID велосипеда
      required: true
      schema:
        type: string
        format: uuid
    DeviceStateHistoryId:
      name: id
      in: path
      description: ID велосипеда
      required: true
      schema:
        type: string
    UpperLeftLatQuery:
      in: query
      name: upperLeftLat
      schema:
        type: number
        format: double
      required: true
      example: '43'
      description: Широта верхнего левого угла области видимости карты
    UpperLeftLngQuery:
      in: query
      name: upperLeftLng
      schema:
        type: number
        format: double
      required: true
      example: '76'
      description: Долгота верхнего левого угла области видимости карты
    LowerRightLatQuery:
      in: query
      name: lowerRightLat
      schema:
        type: number
        format: double
      required: true
      example: '44'
      description: Широта нижнего правого угла области видимости карты
    LowerRightLngQuery:
      in: query
      name: lowerRightLng
      schema:
        type: number
        format: double
      required: true
      example: '77'
      description: Долгота нижнего правого угла области видимости карты
  schemas:
    Bike:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Уникальный идентификатор велосипеда
        bike_type:
          type: string
          description: Тип велосипеда
        last_known_location:
          type: object
          properties:
            type:
              type: string
              enum: ['Point']
            coordinates:
              type: array
              items:
                type: number
                format: double
              minItems: 2
              maxItems: 2
          description: Последнее известное местоположение велосипеда в формате GeoJSON
        is_rented:
          type: boolean
          description: Статус аренды велосипеда (true - в аренде, false - свободен)
        created_at:
          type: string
          format: date-time
          description: Дата и время создания записи о велосипеде
        updated_at:
          type: string
          format: date-time
          description: Дата и время последнего обновления записи о велосипеде
      required:
        - id
        - bike_type
        - last_known_location
        - is_rented

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        referralCode:
          $ref: '#/components/schemas/ReferralCode'
      required:
        - id
        - email
        - createdAt
        - updatedAt

    ReferralCode:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        userId:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - code
        - userId
        - createdAt
        - updatedAt
    DeviceStateHistory:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Уникальный идентификатор истории состояния устройства
        device_id:
          type: string
          format: uuid
          description: Идентификатор устройства
        state:
          type: string
          description: Состояние устройства
        created_at:
          type: string
          format: date-time
          description: Дата и время создания записи
        updated_at:
          type: string
          format: date-time
          description: Дата и время последнего обновления записи
      required:
        - id
        - device_id
        - state

    BikeType:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Уникальный идентификатор типа велосипеда
        name:
          type: string
          description: Название типа велосипеда
        created_at:
          type: string
          format: date-time
          description: Дата и время создания записи
        updated_at:
          type: string
          format: date-time
          description: Дата и время последнего обновления записи
      required:
        - id
        - name
    Error:
      type: object
      required:
        - message
      properties:
        errorMessage:
          type: string
          description: Error message with futher details.
        errorCode:
          type: string
          description: Error code.
    MetaDataPaging:
      type: object
      description: "Common meta data for pagination"
      required:
        - page
        - pageSize
        - totalPages
        - totalSize
      properties:
        page:
          type: integer
          description: "Current page number."
          example: 0
        pageSize:
          type: integer
          description: "The used page size."
          example: 15
        totalPages:
          type: integer
          description: "Total pages with applied filters."
          example: 3
        totalSize:
          type: integer
          description: "Total records with applied filters."
          example: 37

  responses:
    BadRequest:
      description: Bad Request response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized response.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: This response means you do not have access to a specified resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: This response means taht specified resource does not exist.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal Server Error response.

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: [ ]
